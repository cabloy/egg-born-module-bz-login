{"version":3,"file":"backend.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA,uCAAuC,gCAAgC;AACvE;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe;AACf;;AAEA,iBAAiB,+BAA+B;AAChD;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iCAAiC;AACpD;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,6CAA6C;AAC/D;AACA;AACA;AACA,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA,OAAO;AACP;;AAEA,6BAA6B,iDAAiD;AAC9E;AACA,iDAAiD,iDAAiD;AAClG;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,mDAAmD;AAC/D,YAAY,iEAAiE;AAC7E,YAAY,oDAAoD;AAChE,YAAY,kEAAkE;AAC9E,YAAY,qDAAqD;AACjE,YAAY,mEAAmE;AAC/E,eAAe,oDAAoD;AACnE,eAAe,kEAAkE;AACjF,YAAY,0CAA0C;AACtD,eAAe,0CAA0C;AACzD;AACA,YAAY,uEAAuE;AACnF;AACA,qDAAqD,6CAA6C;AAClG;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AChDA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,2BAA2B,mBAAO,CAAC,GAA+B;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB,eAAe;AACf;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvFA,qCAAqC,mBAAO,CAAC,GAA0C;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;;;;;;;ACtCA,uBAAuB,mBAAO,CAAC,GAA4B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;AClBA,kBAAkB,mBAAO,CAAC,EAA2B;AACrD;AACA,wBAAwB;AACxB;AACA;;;;;;;;ACJA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D;AACA,wBAAwB,mBAAO,CAAC,GAA4B;AAC5D,0BAA0B,mBAAO,CAAC,GAA8B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP,kBAAkB;AAClB;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AC1EA;AACA;AACA;AACA,mBAAmB,sCAAsC,yBAAyB;AAClF;AACA;AACA;AACA;;;;;;;;ACPA,uBAAuB,mBAAO,CAAC,GAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS,4EAA4E;AACnG,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACjBA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe;AACf;;AAEA,uBAAuB,MAAM;AAC7B;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;;;;;;;ACtCA,kBAAkB,mBAAO,CAAC,GAAwB;AAClD;AACA,qBAAqB;AACrB;AACA;;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-bz-login/./backend/src/aops.js","webpack://egg-born-module-bz-login/./backend/src/bean/atom.loginBackImage.js","webpack://egg-born-module-bz-login/./backend/src/bean/version.manager.js","webpack://egg-born-module-bz-login/./backend/src/beans.js","webpack://egg-born-module-bz-login/./backend/src/config/config.js","webpack://egg-born-module-bz-login/./backend/src/config/errors.js","webpack://egg-born-module-bz-login/./backend/src/config/locale/en-us.js","webpack://egg-born-module-bz-login/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-bz-login/./backend/src/config/locales.js","webpack://egg-born-module-bz-login/./backend/src/config/static/layout/layoutAtomListLoginBackImage.js","webpack://egg-born-module-bz-login/./backend/src/config/static/layouts.js","webpack://egg-born-module-bz-login/./backend/src/config/static/resources.js","webpack://egg-born-module-bz-login/./backend/src/config/validation/schema/loginBackImage.js","webpack://egg-born-module-bz-login/./backend/src/config/validation/schemas.js","webpack://egg-born-module-bz-login/./backend/src/controller/backImage.js","webpack://egg-born-module-bz-login/./backend/src/controllers.js","webpack://egg-born-module-bz-login/./backend/src/main.js","webpack://egg-born-module-bz-login/./backend/src/meta.js","webpack://egg-born-module-bz-login/./backend/src/model/loginBackImage.js","webpack://egg-born-module-bz-login/./backend/src/models.js","webpack://egg-born-module-bz-login/./backend/src/routes.js","webpack://egg-born-module-bz-login/./backend/src/service/backImage.js","webpack://egg-born-module-bz-login/./backend/src/services.js","webpack://egg-born-module-bz-login/webpack/bootstrap","webpack://egg-born-module-bz-login/webpack/before-startup","webpack://egg-born-module-bz-login/webpack/startup","webpack://egg-born-module-bz-login/webpack/after-startup"],"sourcesContent":["module.exports = app => {\n  const aops = {};\n  return aops;\n};\n","module.exports = app => {\n  class Atom extends app.meta.AtomBase {\n    async create({ atomClass, item, options, user }) {\n      // super\n      const key = await super.create({ atomClass, item, options, user });\n      // add loginBackImage\n      const res = await this.ctx.model.loginBackImage.insert({\n        atomId: key.atomId,\n      });\n      // return key\n      return { atomId: key.atomId, itemId: res.insertId };\n    }\n\n    async read({ atomClass, options, key, user }) {\n      // super\n      const item = await super.read({ atomClass, options, key, user });\n      if (!item) return null;\n      // meta\n      this._getMeta(item);\n      // ok\n      return item;\n    }\n\n    async select({ atomClass, options, items, user }) {\n      // super\n      await super.select({ atomClass, options, items, user });\n      // meta\n      for (const item of items) {\n        this._getMeta(item);\n      }\n    }\n\n    async write({ atomClass, target, key, item, options, user }) {\n      // check demo\n      this.ctx.bean.util.checkDemoForAtomWrite();\n      // super\n      await super.write({ atomClass, target, key, item, options, user });\n      // update loginBackImage\n      const data = await this.ctx.model.loginBackImage.prepareData(item);\n      await this.ctx.model.loginBackImage.update(data);\n    }\n\n    async delete({ atomClass, key, options, user }) {\n      // super\n      await super.delete({ atomClass, key, options, user });\n      // delete loginBackImage\n      await this.ctx.model.loginBackImage.delete({\n        id: key.itemId,\n      });\n    }\n\n    async checkRightAction({ atom, atomClass, action, stage, user, checkFlow }) {\n      // super\n      const res = await super.checkRightAction({ atom, atomClass, action, stage, user, checkFlow });\n      if (!res) return res;\n      if (atom.atomStage !== 1) return res;\n      if (action !== 101) return res;\n      // setCurrent\n      const item = await this.ctx.model.loginBackImage.get({ id: atom.itemId });\n      if (action === 101 && item.isCurrent === 0) return res;\n      return null;\n    }\n\n    _getMeta(item) {\n      const meta = this._ensureItemMeta(item);\n      // meta.flags\n      // meta.summary\n      meta.summary = item.description;\n    }\n  }\n\n  return Atom;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {\n      if (options.version === 1) {\n        // create table: bzLoginBackImage\n        const sql = `\n          CREATE TABLE bzLoginBackImage (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            backImage varchar(255) DEFAULT NULL,\n            isCurrent int(11) DEFAULT '0',\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        // add role rights\n        const roleRights = [\n          { roleName: 'system', action: 'create' },\n          { roleName: 'system', action: 'read', scopeNames: 0 },\n          { roleName: 'system', action: 'read', scopeNames: 'authenticated' },\n          { roleName: 'system', action: 'write', scopeNames: 0 },\n          { roleName: 'system', action: 'write', scopeNames: 'authenticated' },\n          { roleName: 'system', action: 'delete', scopeNames: 0 },\n          { roleName: 'system', action: 'delete', scopeNames: 'authenticated' },\n          // { roleName: 'system', action: 'clone', scopeNames: 0 },\n          // { roleName: 'system', action: 'clone', scopeNames: 'authenticated' },\n          { roleName: 'system', action: 'deleteBulk' },\n          // { roleName: 'system', action: 'exportBulk' },\n          // custom\n          { roleName: 'system', action: 'setCurrent', scopeNames: 'authenticated' },\n        ];\n        await this.ctx.bean.role.addRoleRightBatch({ atomClassName: 'loginBackImage', roleRights });\n      }\n    }\n\n    async test() {}\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst atomLoginBackImage = require('./bean/atom.loginBackImage.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // atom\n    'atom.loginBackImage': {\n      mode: 'app',\n      bean: atomLoginBackImage,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {\n  LoginBackImages: 'Login Back Images',\n  SetCurrent: 'Set Current',\n};\n","module.exports = {\n  LoginBackImage: '登录背景图',\n  LoginBackImages: '登录背景图',\n  SetCurrent: '设为当前',\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  // const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    layouts: {\n      table: {\n        blocks: {\n          items: {\n            columns: [\n              {\n                dataIndex: 'atomName',\n                title: 'Atom Name',\n                align: 'left',\n                component: {\n                  module: 'a-baselayout',\n                  name: 'listLayoutTableCellAtomName',\n                },\n              },\n              {\n                dataIndex: 'backImage',\n                title: 'BackImage',\n                align: 'center',\n                component: {\n                  module: 'a-baserender',\n                  name: 'renderTableCellImage',\n                  options: {\n                    props: {\n                      size: {\n                        height: 36,\n                      },\n                    },\n                  },\n                },\n              },\n              {\n                dataIndex: 'isCurrent',\n                title: 'IsCurrent',\n                align: 'center',\n                component: {\n                  module: 'bz-login',\n                  name: 'listLayoutTableCellIsCurrent',\n                },\n              },\n              {\n                dataIndex: 'userName',\n                title: 'Creator',\n                align: 'left',\n                component: {\n                  module: 'a-baselayout',\n                  name: 'listLayoutTableCellUserName',\n                },\n              },\n              {\n                dataIndex: 'atomCreatedAt',\n                title: 'Created Time',\n                align: 'center',\n                params: {\n                  dateFormat: {\n                    lines: true,\n                  },\n                },\n              },\n              {\n                dataIndex: 'atomUpdatedAt',\n                title: 'Modification Time',\n                align: 'center',\n                params: {\n                  dateFormat: {\n                    lines: true,\n                  },\n                },\n              },\n            ],\n          },\n        },\n      },\n    },\n  };\n  const layout = {\n    atomName: 'LoginBackImage',\n    atomStaticKey: 'layoutAtomListLoginBackImage',\n    atomRevision: 2,\n    description: '',\n    layoutTypeCode: 3,\n    content: JSON.stringify(content),\n    resourceRoles: 'root',\n  };\n  return layout;\n};\n","const layoutAtomListLoginBackImage = require('./layout/layoutAtomListLoginBackImage.js');\n\nmodule.exports = app => {\n  const layouts = [\n    //\n    layoutAtomListLoginBackImage(app),\n  ];\n  return layouts;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const resources = [\n    // menu\n    {\n      atomName: 'LoginBackImages',\n      atomStaticKey: 'listLoginBackImage',\n      atomRevision: 1,\n      atomCategoryId: 'a-base:menu.BasicProfile',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'loginBackImage',\n        atomAction: 'read',\n      }),\n      resourceIcon: ':outline:login-outline',\n      appKey: 'a-appbooster:appSystem',\n      resourceRoles: 'template.system',\n    },\n  ];\n  return resources;\n};\n","module.exports = app => {\n  const schemas = {};\n  // loginBackImage\n  schemas.loginBackImage = {\n    type: 'object',\n    properties: {\n      atomName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Name',\n        notEmpty: true,\n      },\n      backImage: {\n        type: 'string',\n        ebType: 'image',\n        ebTitle: 'BackImage',\n        notEmpty: true,\n      },\n      isCurrent: {\n        // not set type\n        // type: 'number',\n        ebType: 'toggle',\n        ebTitle: 'IsCurrent',\n        ebReadOnly: true,\n        ebDisplay: {\n          host: {\n            stage: 'formal',\n          },\n        },\n      },\n    },\n  };\n  // loginBackImage search\n  schemas.loginBackImageSearch = {\n    type: 'object',\n    properties: {},\n  };\n  return schemas;\n};\n","const loginBackImage = require('./schema/loginBackImage.js');\n\nmodule.exports = app => {\n  const schemas = {};\n  // loginBackImage\n  Object.assign(schemas, loginBackImage(app));\n  // ok\n  return schemas;\n};\n","module.exports = app => {\n  class BackImageController extends app.Controller {\n    async setCurrent() {\n      const res = await this.ctx.service.backImage.setCurrent({\n        key: this.ctx.request.body.key,\n        user: this.ctx.state.user.op,\n      });\n      this.ctx.success(res);\n    }\n    async getCurrent() {\n      const res = await this.ctx.service.backImage.getCurrent({\n        user: this.ctx.state.user.op,\n      });\n      this.ctx.success(res);\n    }\n  }\n\n  return BackImageController;\n};\n","const backImage = require('./controller/backImage.js');\nmodule.exports = app => {\n  const controllers = { backImage };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n  // aops\n  const aops = require('./aops.js')(app);\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    aops,\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  // schemas\n  const schemas = require('./config/validation/schemas.js')(app);\n  // static\n  const staticLayouts = require('./config/static/layouts.js')(app);\n  const staticResources = require('./config/static/resources.js')(app);\n  // meta\n  const meta = {\n    base: {\n      atoms: {\n        loginBackImage: {\n          info: {\n            bean: 'loginBackImage',\n            title: 'LoginBackImage',\n            tableName: 'bzLoginBackImage',\n            language: false,\n            category: false,\n            tag: false,\n            comment: false,\n            attachment: false,\n            layout: {\n              config: {\n                atomList: 'layoutAtomListLoginBackImage',\n              },\n            },\n          },\n          actions: {\n            setCurrent: {\n              code: 101,\n              title: 'SetCurrent',\n              actionModule: moduleInfo.relativeName,\n              actionComponent: 'action',\n              icon: { f7: '::radio-button-unchecked' },\n              enableOnOpened: true,\n              directShowOnList: true,\n              directShowOnItem: true,\n              stage: 'formal',\n            },\n          },\n          validator: 'loginBackImage',\n          search: {\n            validator: 'loginBackImageSearch',\n          },\n        },\n      },\n      statics: {\n        'a-baselayout.layout': {\n          items: staticLayouts,\n        },\n        'a-base.resource': {\n          items: staticResources,\n        },\n      },\n    },\n    validation: {\n      validators: {\n        loginBackImage: {\n          schemas: 'loginBackImage',\n        },\n        loginBackImageSearch: {\n          schemas: 'loginBackImageSearch',\n        },\n      },\n      keywords: {},\n      schemas,\n    },\n    index: {\n      indexes: {\n        bzLoginBackImage: 'createdAt,updatedAt,atomId',\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  class LoginBackImage extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'bzLoginBackImage', options: { disableDeleted: false } });\n    }\n  }\n  return LoginBackImage;\n};\n","const loginBackImage = require('./model/loginBackImage.js');\n\nmodule.exports = app => {\n  const models = {\n    loginBackImage,\n  };\n  return models;\n};\n","module.exports = app => {\n  const routes = [\n    // backImage\n    {\n      method: 'post',\n      path: 'backImage/setCurrent',\n      controller: 'backImage',\n      meta: { right: { type: 'atom', atomClass: 'bz-login:loginBackImage', action: 'setCurrent' } },\n    },\n    {\n      method: 'get',\n      path: 'backImage/current',\n      action: 'getCurrent',\n      controller: 'backImage',\n    },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class BackImage extends app.Service {\n    async setCurrent({ key, user }) {\n      // get old\n      let keyOld;\n      const itemOld = await this.ctx.model.loginBackImage.get({\n        isCurrent: 1,\n      });\n      if (itemOld) {\n        keyOld = { atomId: itemOld.atomId, itemId: itemOld.id };\n      }\n      if (keyOld && keyOld.atomId === key.atomId) {\n        // do nothing\n        return null;\n      }\n      // new\n      await this.ctx.model.loginBackImage.update({\n        id: key.itemId,\n        isCurrent: 1,\n      });\n      if (keyOld) {\n        await this.ctx.model.loginBackImage.update({\n          id: keyOld.itemId,\n          isCurrent: 0,\n        });\n      }\n      // ok\n      return { key, keyOld };\n    }\n\n    async getCurrent({ user }) {\n      return await this.ctx.model.loginBackImage.get({\n        isCurrent: 1,\n      });\n    }\n  }\n\n  return BackImage;\n};\n","const backImage = require('./service/backImage.js');\nmodule.exports = app => {\n  const services = { backImage };\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}